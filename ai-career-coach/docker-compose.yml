services:

  frontend:
    build: ./apps/frontend
    ports:
      - "3000:3000"
    depends_on: [backend]
    networks:
      - career_coach_network

  backend:
    build: ./apps/backend
    ports:
      - "4000:4000"
    depends_on: [postgres, mongodb, redis]
    networks:
      - career_coach_network

  ml-service:
    build: ./apps/ml-service
    ports:
      - "5000:5000"
    depends_on: [postgres, mongodb]
    networks:
      - career_coach_network

  postgres:
    image: postgres:17
    container_name: career_coach_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-career_coach}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-your_secure_password}
      POSTGRES_DB: ${POSTGRES_DB:-career_coach_db}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db/postgres-init.sql:/docker-entrypoint-initdb.d/01-init.sql
    networks:
      - career_coach_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-career_coach}"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongodb:
    image: mongo:7
    container_name: career_coach_mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER:-career_coach}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-your_secure_password}
      MONGO_INITDB_DATABASE: ${MONGO_DB:-career_coach_db}
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      - ./scripts/init-db/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    networks:
      - career_coach_network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: career_coach_redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-your_secure_password}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - career_coach_network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-your_secure_password}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  mongo_data:
  redis_data:

networks:
  career_coach_network:
    driver: bridge
